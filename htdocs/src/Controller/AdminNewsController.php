<?php

namespace App\Controller;

use Cake\Network\Exception\NotFoundException;
use Cake\ORM\TableRegistry;
use Symfony\Component\Console\Exception\RuntimeException;


class AdminNewsController extends AdminController
{
    public $paginate = [
        'maxLimit' => 5,
        'limit' => 5,
        'order' => [
            'News.id' => 'desc'
        ]
    ];

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadComponent('Paginator');
    }

    public function index()
    {
        $newsTable = TableRegistry::get('news');
        $allNews = $newsTable->find('all')->orderDesc(true);
        $allNews = $this->paginate($allNews);
        $subTitle = "News";
        $this->set(compact(['subTitle', 'allNews']));
    }

    public function add()
    {
        $newsTable = TableRegistry::get('news');
        $new = $newsTable->newEntity();
        if ($this->request->is('post')) {
            $new->new_name = $this->request->data['new_name'];
            $new->new_content = $this->request->data['new_content'];
            $new->new_date = date("Y/m/d");
            $new->new_is_main = $this->request->data['is_main'];

            if ($this->request->data['is_main'] == 1) {
                $mainNews = $newsTable->find()->where(['new_is_main' => 1]);

                foreach ($mainNews as $news) {
                    $news->new_is_main = 0;
                    $newsTable->save($news);
                }
            }

            if ($newsTable->save($new)) {
                $this->redirect(['controller' => 'AdminNews', 'action' => 'index']);
            } else {
                throw new RuntimeException("Can't save new");
            }
        }
    }

    public function delete($newId)
    {
        if (is_null($newId) || !(int)$newId) {
            throw new NotFoundException('New with this id not found');
        }

        $newsTable = TableRegistry::get('news');
        $new = $newsTable->get($newId);
        if (is_null($new)) {
            throw new NotFoundException('New with this id not found');
        } else {
            if($new->new_is_main == 1){
                $this->setLastNewsAsMain();
            }
            if ($newsTable->delete($new, ['id' => $newId])) {
                $this->redirect(['controller' => 'AdminNews', 'action' => 'index']);
            } else {
                throw new RuntimeException("Can't delete this new");
            }
        }
    }

    private function setLastNewsAsMain(){
        $newsTable = TableRegistry::get('news');
        $lastNews = $newsTable->find()->where(['new_is_main' => 0])->limit(1)->orderDesc(true);

        foreach ($lastNews as $newMain){
            $newMain->new_is_main = 1;
        }

        if(!$newsTable->save($newMain)){
            throw new RuntimeException('Internal server error!');
        }
    }

    public function getRowDataById($rowId)
    {

        if (is_null($rowId) || !(int)$rowId) {
            throw new NotFoundException('New with this id not found');
        }

        if (!$this->request->is('requested')) {
            $newsTable = TableRegistry::get('news');
            $news = $newsTable->get($rowId);
            if (!is_null($news)) {
                $this->response->body(json_encode($news));
                return $this->response;
            }
        }

        throw new NotFoundException('Not found');
    }

    public function edit($rowId)
    {
        if (is_null($rowId) || !(int)$rowId) {
            throw new NotFoundException('New with this id not found');
        }
        if ($this->request->is('post')) {
            $newsTable = TableRegistry::get('news');
            $editableNews = $newsTable->get($rowId);
            if ($this->request->data['is_main'] == 1) {
                $mainNews = $newsTable->find()->where(['new_is_main' => 1]);
                foreach ($mainNews as $main) {
                    $main->new_is_main = 0;
                    $newsTable->save($main);
                }
            }
            $editableNews->new_is_main = $this->request->data['is_main'];
            $editableNews->new_name = $this->request->data['new_name'];
            $editableNews->new_content = $this->request->data['new_content'];
            $editableNews->new_date = date("Y/m/d");
            if ($newsTable->save($editableNews)) {
                $this->redirect(['controller' => 'AdminNews', 'action' => 'index']);
            } else {
                throw new RuntimeException("Can't edit new");
            }
        }
    }
}
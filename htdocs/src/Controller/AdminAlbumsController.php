<?php


namespace App\Controller;


use Cake\Network\Exception\NotFoundException;
use Cake\ORM\TableRegistry;
use Symfony\Component\Console\Exception\RuntimeException;

class AdminAlbumsController extends AdminController
{
    public $paginate = [
        'maxLimit' => 5,
        'limit' => 5,
        'order' => [
            'Albums.id' => 'desc'
        ]
    ];

    public function index()
    {
        $subTitle = "Albums";
        $albumsTable = TableRegistry::get('albums');
        $allAlbums = $albumsTable->find('all')->orderDesc(true);
        $allAlbums = $this->paginate($allAlbums);
        $this->set(compact('subTitle', 'allAlbums'));
    }

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadComponent('Paginator');
    }

    public function add()
    {
        $albumsTable = TableRegistry::get('albums');
        $album = $albumsTable->newEntity();
        if ($this->request->is('post')) {
            $album->album_name = $this->request->data['album_name'];
            //htmlspecialchars_decode
            $album->album_description = $this->request->data['content'];
            $album->date = date("Y/m/d");

            if ($albumsTable->save($album)) {
                $this->redirect(['controller' => 'AdminAlbums', 'action' => 'index']);
            } else {
                throw new RuntimeException("Can't save album");
            }
        }
    }

    public function delete($albumId)
    {
        if (is_null($albumId) || !(int)$albumId) {
            throw new NotFoundException('New with this id not found');
        }

        $albumsTable = TableRegistry::get('albums');
        $selectedAlbum = $albumsTable->get($albumId);

        if (!is_null($selectedAlbum)) {
            if ($albumsTable->delete($selectedAlbum, ['id' => $albumId])) {
                $this->redirect(['controller' => 'AdminAlbums', 'action' => 'index']);
            } else {
                throw new RuntimeException("Can't delete this album");
            }
        } else {
            throw new NotFoundException("Not found album with this id");
        }
    }

    public function getRowDataById($rowId)
    {

        if (is_null($rowId) || !(int)$rowId) {
            throw new NotFoundException('New with this id not found');
        }

        if (!$this->request->is('requested')) {
            $albumsTable = TableRegistry::get('albums');
            $album = $albumsTable->get($rowId);
            if (!is_null($album)) {
                $this->response->body(json_encode($album));
                return $this->response;
            }
        }

        throw new NotFoundException('Not found');
    }

    public function edit($albumId)
    {
        if (is_null($albumId) || !(int)$albumId) {
            throw new NotFoundException('New with this id not found');
        }

        if ($this->request->is('post')) {
            $albumsTable = TableRegistry::get('albums');
            $editableAlbum = $albumsTable->get($albumId);

            $editableAlbum->album_name = $this->request->data['album_name'];
            $editableAlbum->album_description = $this->request->data['content'];
            $editableAlbum->date = date("Y/m/d");

            if ($albumsTable->save($editableAlbum)) {
                $this->redirect(['controller' => 'AdminAlbums', 'action' => 'index']);
            } else {
                throw new RuntimeException("Can't save album");
            }
        }
    }
}